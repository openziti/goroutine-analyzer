name: build

on:
  push:
    branches:
      - main
      - release-v*
  pull_request:
  workflow_dispatch:

env:
  gh_ci_key: ${{ secrets.GH_CI_KEY }}

jobs:

# WINDOWS BUILD
  build-windows-installer:
    name: Build Installer on Windows
    runs-on: windows-latest
    steps:

    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v3

    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: temurin

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.x'

    - name: Install Ziti CI
      uses: netfoundry/ziti-ci@v1

    - id: build
      name: Build distribution
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        .\gradlew.bat -v
        .\gradlew.bat build
        .\gradlew.bat copyDeps
        jpackage --verbose --app-version $(ziti-ci -q -l java get-next-version) "@jpackage.cfg" "@jpackage-windows.cfg"

    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v3
      with:
        path: ./build/distributions/*.msi
        name: windows-installer-${{ github.run_id }}
        retention-days: 1

# MACOS BUILD
  build-mac-installer:
    name: Build Installer on MacOS
    runs-on: macos-latest
    steps:

    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v3

    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: temurin

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.x'

    - name: Install Ziti CI
      uses: netfoundry/ziti-ci@v1

    - id: build
      name: Build distribution
      run: |
        $(go env GOPATH)/bin/ziti-ci configure-git
        ./gradlew -v
        ./gradlew build
        ./gradlew copyDeps
        jpackage --verbose --app-version $($(go env GOPATH)/bin/ziti-ci -q -l java get-next-version) "@jpackage.cfg" "@jpackage-darwin.cfg"
        mv build/distributions/goroutine-analyzer-$($(go env GOPATH)/bin/ziti-ci -q -l java get-next-version).dmg build/distributions/goroutine-analyzer-$($(go env GOPATH)/bin/ziti-ci -q -l java get-next-version)-amd64.dmg

    - id: upload-installer
      name: Upload installer
      uses: actions/upload-artifact@v3
      with:
        path: ./build/distributions/*.dmg
        name: macos-installer-${{ github.run_id }}
        retention-days: 1

# LINUX BUILD, FINALIZE RELEASE
  build-linux-installer:
    name: Build Installer on Linux
    runs-on: ubuntu-latest
    needs : [build-windows-installer, build-mac-installer]
    steps:

    - id: checkout-code
      name: Checkout code
      uses: actions/checkout@v3

    - id: setup-jdk
      name: Setup JDK
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: temurin

    - name: Install Go
      uses: actions/setup-go@v3
      with:
        go-version: '1.19.x'

    - name: Install Ziti CI
      uses: netfoundry/ziti-ci@v1

    - name: Download os release artifact
      uses: actions/download-artifact@v3
      with:
        name: macos-installer-${{ github.run_id }}
        path: build/distributions/

    - name: Download windows release artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-installer-${{ github.run_id }}
        path: build/distributions/

    - id: build
      name: Build distribution
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ziti_ci_gpg_key: ${{ secrets.ZITI_CI_GPG_KEY }}
        ziti_ci_gpg_key_id: ${{ secrets.ZITI_CI_GPG_KEY_ID }}
      run: |
        $(go env GOPATH)/bin/ziti-ci configure-git
        ./gradlew -v
        ./gradlew build
        ./gradlew copyDeps
        jpackage --verbose --app-version $($(go env GOPATH)/bin/ziti-ci -q -l java get-next-version) "@jpackage.cfg" "@jpackage-linux.cfg"

    - id: publish
      name: Publish
      if: github.repository_owner == 'openziti' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-v'))
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        ziti_ci_gpg_key: ${{ secrets.ZITI_CI_GPG_KEY }}
        ziti_ci_gpg_key_id: ${{ secrets.ZITI_CI_GPG_KEY_ID }}
      run: |
        $(go env GOPATH)/bin/ziti-ci tag -v -f version
        gh release create $($(go env GOPATH)/bin/ziti-ci -q get-current-version) build/distributions/*
